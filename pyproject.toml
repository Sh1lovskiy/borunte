[project]
name = "borunte"
version = "0.1.0"
description = "Borunte robot control test"
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "loguru>=0.7.3",
    "matplotlib>=3.10.6",
    "numpy>=2.3.3",
    "opencv-contrib-python>=4.11.0.86",
    "pandas>=2.3.2",
    "plotly>=6.3.1",
    "pymodbus",
    "pynput>=1.8.1",
    "pyrealsense2>=2.56.5.9235",
    "pyyaml>=6.0.2",
    "scipy>=1.16.2",
    "seaborn>=0.13.2",
    "tqdm>=4.67.1",
    "click>=8.0.0",
    "open3d>=0.15.0",
    "pydantic>=2.0.0",
    "transforms3d>=0.4.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "ruff>=0.0.250",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
]
viz = [
    "plotly>=5.0.0",
    "matplotlib>=3.5.0",
    "open3d>=0.15.0",
]

[project.scripts]
borunte-capture = "borunte.cli.capture_runner:main"
borunte-waypoints = "borunte.cli.waypoints_runner:run_waypoints"
borunte-visualize = "borunte.vision.analysis.visualize_runner:main"
borunte-merge = "borunte.vision.analysis.merge_runner:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["borunte*"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | __pycache__
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by black)
]
extend-ignore = [
    "PLR",  # Design related pylint codes
]
fixable = ["ALL"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require hardware",
]